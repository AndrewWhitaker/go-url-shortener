basePath: /api/v1
definitions:
  clicks.GetShortUrlClicksResponse:
    properties:
      count:
        type: integer
      time_period:
        type: string
    type: object
  e.ErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/e.ValidationError'
        type: array
    type: object
  e.ValidationError:
    properties:
      field:
        type: string
      reason:
        type: string
    type: object
  models.ShortUrlCreateFields:
    properties:
      expires_on:
        example: "2023-01-01T16:30:00Z"
        format: dateTime
        type: string
      long_url:
        example: http://www.google.com
        format: url
        type: string
      slug:
        example: myslug
        type: string
    required:
    - long_url
    type: object
  models.ShortUrlReadFields:
    properties:
      created_at:
        example: "2022-05-11T11:30:00Z"
        format: dateTime
        type: string
      expires_on:
        example: "2023-01-01T16:30:00Z"
        format: dateTime
        type: string
      long_url:
        example: http://www.google.com
        format: url
        type: string
      slug:
        example: myslug
        type: string
    required:
    - long_url
    type: object
host: localhost:8080
info:
  contact: {}
  description: A basic URL shortener
  title: URL Shortener
  version: "1.0"
paths:
  /shorturls:
    post:
      consumes:
      - application/json
      description: Create a new short url. Users may specify a slug and an expiration
        date. If a slug is not supplied, an 8 character slug will automatically be
        generated for the short url.
      parameters:
      - description: New short URL parameters
        in: body
        name: shorturl
        required: true
        schema:
          $ref: '#/definitions/models.ShortUrlCreateFields'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShortUrlReadFields'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ShortUrlReadFields'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/e.ErrorResponse'
        "404":
          description: ""
        "500":
          description: ""
      summary: Create a new short url
      tags:
      - shorturls
  /shorturls/{slug}:
    delete:
      consumes:
      - application/json
      description: Delete an existing short URL by supplying the slug.
      parameters:
      - description: slug of short URL to delete
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/e.ErrorResponse'
        "500":
          description: ""
      summary: Delete an existing short URL
      tags:
      - shorturls
  /shorturls/{slug}/clicks:
    get:
      consumes:
      - application/json
      description: Get clicks (statistics) for a short URL. Time periods of all time,
        24 hours, and 1 week are permitted.
      parameters:
      - description: slug of short URL to retrieve statistics for
        in: path
        name: slug
        required: true
        type: string
      - description: time period to retrieve statistics for
        enum:
        - 24_HOURS
        - 1_WEEK
        - ALL_TIME
        in: query
        name: time_period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/clicks.GetShortUrlClicksResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/e.ErrorResponse'
        "500":
          description: ""
      summary: Get clicks for a short URL
      tags:
      - shorturls
swagger: "2.0"
